"""
add game result columns to `games`.

Revision ID: adfa1d5f22f4
Revises: 12531d2d5b0f
Create Date: 2025-07-26 15:10:44.377136

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op


revision: str = "adfa1d5f22f4"
down_revision: str | None = "12531d2d5b0f"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "games",
        sa.Column("result_decided_game_ai_win_ai_id", sa.Uuid(), nullable=True),
    )
    op.add_column(
        "games",
        sa.Column(
            "result_decided_game_user_win_user_id",
            sa.BigInteger(),
            nullable=True,
        ),
    )
    op.add_column(
        "games",
        sa.Column(
            "result_decided_game_user_win_new_stars",
            sa.Integer(),
            nullable=True,
        ),
    )
    op.add_column(
        "games",
        sa.Column(
            "result_decided_game_user_win_rating_vector",
            sa.Float(),
            nullable=True,
        ),
    )
    op.add_column(
        "games",
        sa.Column(
            "result_decided_game_ai_loss_ai_id",
            sa.Uuid(),
            nullable=True,
        ),
    )
    op.add_column(
        "games",
        sa.Column(
            "result_decided_game_user_loss_user_id",
            sa.BigInteger(),
            nullable=True,
        ),
    )
    op.add_column(
        "games",
        sa.Column(
            "result_decided_game_user_loss_rating_vector",
            sa.Float(),
            nullable=True,
        ),
    )
    op.add_column(
        "games",
        sa.Column("result_draw_game_ai_draw1_ai_id", sa.Uuid(), nullable=True),
    )
    op.add_column(
        "games",
        sa.Column(
            "result_draw_game_user_draw1_user_id",
            sa.BigInteger(),
            nullable=True,
        ),
    )
    op.add_column(
        "games",
        sa.Column(
            "result_draw_game_user_draw1_rating_vector",
            sa.Float(),
            nullable=True,
        ),
    )
    op.add_column(
        "games",
        sa.Column("result_draw_game_ai_draw2_ai_id", sa.Uuid(), nullable=True),
    )
    op.add_column(
        "games",
        sa.Column(
            "result_draw_game_user_draw2_user_id",
            sa.BigInteger(),
            nullable=True,
        ),
    )
    op.add_column(
        "games",
        sa.Column(
            "result_draw_game_user_draw2_rating_vector",
            sa.Float(),
            nullable=True,
        ),
    )
    op.add_column(
        "games",
        sa.Column(
            "result_cancelled_game_canceler_id",
            sa.BigInteger(),
            nullable=True,
        ),
    )
    op.create_index(
        "ix_games_result_cancelled_game_canceler_id",
        "games",
        ["result_draw_game_user_draw2_user_id"],
        unique=False,
        postgresql_where=sa.text(
            "result_draw_game_user_draw2_user_id IS NOT NULL",
        ),
    )
    op.create_index(
        "ix_games_result_decided_game_ai_loss_ai_id",
        "games",
        ["result_decided_game_ai_loss_ai_id"],
        unique=False,
        postgresql_where=sa.text(
            "result_decided_game_ai_loss_ai_id IS NOT NULL",
        ),
    )
    op.create_index(
        "ix_games_result_decided_game_ai_win_ai_id",
        "games",
        ["result_decided_game_ai_win_ai_id"],
        unique=False,
        postgresql_where=sa.text(
            "result_decided_game_ai_win_ai_id IS NOT NULL",
        ),
    )
    op.create_index(
        "ix_games_result_decided_game_user_loss_user_id",
        "games",
        ["result_decided_game_user_loss_user_id"],
        unique=False,
        postgresql_where=sa.text(
            "result_decided_game_user_loss_user_id IS NOT NULL",
        ),
    )
    op.create_index(
        "ix_games_result_decided_game_user_win_user_id",
        "games",
        ["result_decided_game_user_win_user_id"],
        unique=False,
        postgresql_where=sa.text(
            "result_decided_game_user_win_user_id IS NOT NULL",
        ),
    )
    op.create_index(
        "ix_games_result_draw_game_ai_draw1_ai_id",
        "games",
        ["result_draw_game_ai_draw1_ai_id"],
        unique=False,
        postgresql_where=sa.text("result_draw_game_ai_draw1_ai_id IS NOT NULL"),
    )
    op.create_index(
        "ix_games_result_draw_game_ai_draw2_ai_id",
        "games",
        ["result_draw_game_ai_draw2_ai_id"],
        unique=False,
        postgresql_where=sa.text("result_draw_game_ai_draw2_ai_id IS NOT NULL"),
    )
    op.create_index(
        "ix_games_result_draw_game_user_draw1_user_id",
        "games",
        ["result_draw_game_user_draw1_user_id"],
        unique=False,
        postgresql_where=sa.text(
            "result_draw_game_user_draw1_user_id IS NOT NULL",
        ),
    )
    op.create_index(
        "ix_games_result_draw_game_user_draw2_user_id",
        "games",
        ["result_draw_game_user_draw2_user_id"],
        unique=False,
        postgresql_where=sa.text(
            "result_draw_game_user_draw2_user_id IS NOT NULL",
        ),
    )
    op.create_foreign_key(
        "games_result_draw_game_user_draw2_user_id_fkey",
        "games",
        "users",
        ["result_draw_game_user_draw2_user_id"],
        ["id"],
        initially="DEFERRED",
        deferrable=True,
    )
    op.create_foreign_key(
        "games_result_decided_game_user_win_user_id_fkey",
        "games",
        "users",
        ["result_decided_game_user_win_user_id"],
        ["id"],
        initially="DEFERRED",
        deferrable=True,
    )
    op.create_foreign_key(
        "games_result_decided_game_user_loss_user_id_fkey",
        "games",
        "users",
        ["result_decided_game_user_loss_user_id"],
        ["id"],
        initially="DEFERRED",
        deferrable=True,
    )
    op.create_foreign_key(
        "games_result_draw_game_ai_draw2_ai_id_fkey",
        "games",
        "ais",
        ["result_draw_game_ai_draw2_ai_id"],
        ["id"],
        initially="DEFERRED",
        deferrable=True,
    )
    op.create_foreign_key(
        "games_result_decided_game_ai_win_ai_id_fkey",
        "games",
        "ais",
        ["result_decided_game_ai_win_ai_id"],
        ["id"],
        initially="DEFERRED",
        deferrable=True,
    )
    op.create_foreign_key(
        "games_result_cancelled_game_canceler_id_fkey",
        "games",
        "users",
        ["result_cancelled_game_canceler_id"],
        ["id"],
        initially="DEFERRED",
        deferrable=True,
    )
    op.create_foreign_key(
        "games_result_decided_game_ai_loss_ai_id_fkey",
        "games",
        "ais",
        ["result_decided_game_ai_loss_ai_id"],
        ["id"],
        initially="DEFERRED",
        deferrable=True,
    )
    op.create_foreign_key(
        "games_result_draw_game_user_draw1_user_id_fkey",
        "games",
        "users",
        ["result_draw_game_user_draw1_user_id"],
        ["id"],
        initially="DEFERRED",
        deferrable=True,
    )
    op.create_foreign_key(
        "games_result_draw_game_ai_draw1_ai_id_fkey",
        "games",
        "ais",
        ["result_draw_game_ai_draw1_ai_id"],
        ["id"],
        initially="DEFERRED",
        deferrable=True,
    )
    op.add_column(
        "users",
        sa.Column("rating", sa.Float(), nullable=False, server_default="1000"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "rating")
    op.drop_constraint(
        "games_result_draw_game_user_draw2_user_id_fkey",
        "games",
        type_="foreignkey",
    )
    op.drop_constraint(
        "games_result_decided_game_user_win_user_id_fkey",
        "games",
        type_="foreignkey",
    )
    op.drop_constraint(
        "games_result_decided_game_user_loss_user_id_fkey",
        "games",
        type_="foreignkey",
    )
    op.drop_constraint(
        "games_result_draw_game_ai_draw2_ai_id_fkey",
        "games",
        type_="foreignkey",
    )
    op.drop_constraint(
        "games_result_decided_game_ai_win_ai_id_fkey",
        "games",
        type_="foreignkey",
    )
    op.drop_constraint(
        "games_result_cancelled_game_canceler_id_fkey",
        "games",
        type_="foreignkey",
    )
    op.drop_constraint(
        "games_result_decided_game_ai_loss_ai_id_fkey",
        "games",
        type_="foreignkey",
    )
    op.drop_constraint(
        "games_result_draw_game_user_draw1_user_id_fkey",
        "games",
        type_="foreignkey",
    )
    op.drop_constraint(
        "games_result_draw_game_ai_draw1_ai_id_fkey",
        "games",
        type_="foreignkey",
    )
    op.drop_index(
        "ix_games_result_draw_game_user_draw2_user_id",
        table_name="games",
        postgresql_where=sa.text(
            "result_draw_game_user_draw2_user_id IS NOT NULL",
        ),
    )
    op.drop_index(
        "ix_games_result_draw_game_user_draw1_user_id",
        table_name="games",
        postgresql_where=sa.text(
            "result_draw_game_user_draw1_user_id IS NOT NULL",
        ),
    )
    op.drop_index(
        "ix_games_result_draw_game_ai_draw2_ai_id",
        table_name="games",
        postgresql_where=sa.text("result_draw_game_ai_draw2_ai_id IS NOT NULL"),
    )
    op.drop_index(
        "ix_games_result_draw_game_ai_draw1_ai_id",
        table_name="games",
        postgresql_where=sa.text("result_draw_game_ai_draw1_ai_id IS NOT NULL"),
    )
    op.drop_index(
        "ix_games_result_decided_game_user_win_user_id",
        table_name="games",
        postgresql_where=sa.text(
            "result_decided_game_user_win_user_id IS NOT NULL",
        ),
    )
    op.drop_index(
        "ix_games_result_decided_game_user_loss_user_id",
        table_name="games",
        postgresql_where=sa.text(
            "result_decided_game_user_loss_user_id IS NOT NULL",
        ),
    )
    op.drop_index(
        "ix_games_result_decided_game_ai_win_ai_id",
        table_name="games",
        postgresql_where=sa.text(
            "result_decided_game_ai_win_ai_id IS NOT NULL",
        ),
    )
    op.drop_index(
        "ix_games_result_decided_game_ai_loss_ai_id",
        table_name="games",
        postgresql_where=sa.text(
            "result_decided_game_ai_loss_ai_id IS NOT NULL",
        ),
    )
    op.drop_index(
        "ix_games_result_cancelled_game_canceler_id",
        table_name="games",
        postgresql_where=sa.text(
            "result_draw_game_user_draw2_user_id IS NOT NULL",
        ),
    )
    op.drop_column("games", "result_cancelled_game_canceler_id")
    op.drop_column("games", "result_draw_game_user_draw2_rating_vector")
    op.drop_column("games", "result_draw_game_user_draw2_user_id")
    op.drop_column("games", "result_draw_game_ai_draw2_ai_id")
    op.drop_column("games", "result_draw_game_user_draw1_rating_vector")
    op.drop_column("games", "result_draw_game_user_draw1_user_id")
    op.drop_column("games", "result_draw_game_ai_draw1_ai_id")
    op.drop_column("games", "result_decided_game_user_loss_rating_vector")
    op.drop_column("games", "result_decided_game_user_loss_user_id")
    op.drop_column("games", "result_decided_game_ai_loss_ai_id")
    op.drop_column("games", "result_decided_game_user_win_rating_vector")
    op.drop_column("games", "result_decided_game_user_win_new_stars")
    op.drop_column("games", "result_decided_game_user_win_user_id")
    op.drop_column("games", "result_decided_game_ai_win_ai_id")
    # ### end Alembic commands ###
