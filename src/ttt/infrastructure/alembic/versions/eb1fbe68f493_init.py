"""
init.

Revision ID: eb1fbe68f493
Revises:
Create Date: 2025-06-18 09:43:07.032490

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql


revision: str = "eb1fbe68f493"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "wait_player1", "wait_player2", "completed", name="game_state",
    ).create(op.get_bind())
    op.create_table(
        "games",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("player1_id", sa.Integer(), nullable=False),
        sa.Column("player2_id", sa.Integer(), nullable=False),
        sa.Column(
            "state",
            postgresql.ENUM(
                "wait_player1",
                "wait_player2",
                "completed",
                name="game_state",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["player1_id"],
            ["players.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player2_id"],
            ["players.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "players",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("number_of_wins", sa.Integer(), nullable=False),
        sa.Column("number_of_draws", sa.Integer(), nullable=False),
        sa.Column("number_of_defeats", sa.Integer(), nullable=False),
        sa.Column("current_game_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["current_game_id"],
            ["games.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cells",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("game_id", sa.Uuid(), nullable=False),
        sa.Column("board_position_x", sa.Integer(), nullable=False),
        sa.Column("board_position_y", sa.Integer(), nullable=False),
        sa.Column("filler_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["filler_id"],
            ["players.id"],
        ),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "game_results",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("game_id", sa.Uuid(), nullable=False),
        sa.Column("winner_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.ForeignKeyConstraint(
            ["winner_id"],
            ["players.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("game_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("game_results")
    op.drop_table("cells")
    op.drop_table("players")
    op.drop_table("games")
    sa.Enum(
        "wait_player1", "wait_player2", "completed", name="game_state",
    ).drop(op.get_bind())
    # ### end Alembic commands ###
