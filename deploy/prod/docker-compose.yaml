name: ttt

services:
  ttt:
    build:
      context: ../../
      dockerfile: deploy/prod/ttt/Dockerfile
      tags:
        - "ttt:prod"
    container_name: ttt
    depends_on:
      postgres_master:
        condition: service_healthy
      postgres_replica1:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      TTT_POSTGRES_URL: postgresql+psycopg://ttt:${POSTGRES_MASTER_TTT_PASSWORD}@postgres_master:5432/ttt
      TTT_POSTGRES_POOL_SIZE: 8
      TTT_POSTGRES_POOL_TIMEOUT_SECONDS: 45
      TTT_POSTGRES_POOL_RECYCLE_SECONDS: 1800
      TTT_POSTGRES_POOL_PRE_PING: false
      TTT_POSTGRES_ECHO: true

      TTT_REDIS_URL: redis://${REDIS_PASSWORD}@redis:6379/0
      TTT_REDIS_POOL_SIZE: 16

      TTT_GAME_WAITING_QUEUE_PULLING_TIMEOUT_MIN_MS: 100
      TTT_GAME_WAITING_QUEUE_PULLING_TIMEOUT_SALT_MS: 200
    secrets:
      - secrets
    networks:
      - postgres
      - redis
    command: ttt

  redis:
    image: redis:8.0.2-bookworm
    container_name: ttt-redis
    volumes:
      - redis-data:/data
      - ./redis:/mnt/dev
      - ../common/redis:/mnt/common
    networks:
      - redis
    healthcheck:
      test: echo PING | redis-cli -a ${REDIS_PASSWORD} | grep -qF PONG
      start_period: 2m
      start_interval: 1s
      interval: 3s
    command: [
      "redis-server", "/mnt/dev/redis.conf", "--requirepass", "$REDIS_PASSWORD"
    ]

  postgres_master:
    image: postgres:16.3-alpine3.19
    container_name: ttt-postgres-master
    volumes:
      - ./postgres_master/postgres.conf:/mnt/postgres.conf
      - ./postgres/common-postgres.conf:/mnt/common-postgres.conf
      - ./postgres_master/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-master-data:/var/lib/postgresql/data
    networks:
      - postgres
    environment:
      POSTGRES_MASTER_REPLICA_PASSWORD: ${POSTGRES_MASTER_REPLICA_PASSWORD}
      POSTGRES_MASTER_TTT_PASSWORD: ${POSTGRES_MASTER_TTT_PASSWORD}
      POSTGRES_DB: root
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    command: ["postgres", "-c", "config_file=/mnt/postgres.conf"]
    healthcheck:
      test: pg_isready -d postgres -U root
      start_period: 1m
      start_interval: 1s
      interval: 5s

  postgres_replica1:
    image: postgres:16.3-alpine3.19
    container_name: ttt-postgres-replica1
    depends_on:
      postgres_master:
        condition: service_healthy
    volumes:
      - ./postgres_replica/postgres.conf:/mnt/postgres.conf
      - ./postgres/common-postgres.conf:/mnt/common-postgres.conf
      - postgres-replica1-data:/var/lib/postgresql/data
    networks:
      - postgres
    environment:
      POSTGRES_DB: root
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    command: [
      "postgres",
      "-c",
      "config_file=/mnt/postgres.conf",
      "-c",
      "primary_conninfo='host=postgres_master user=replica password=${POSTGRES_MASTER_REPLICA_PASSWORD} application_name=replica1\'",
    ]
    healthcheck:
      test: pg_isready -d postgres -U root
      start_period: 1m
      start_interval: 1s
      interval: 5s

volumes:
  postgres-replica1-data:
    name: "ttt-prod-postgres-replica1-data"
  postgres-master-data:
    name: "ttt-prod-postgres-master-data"
  redis-data:
    name: "ttt-prod-redis-data"

networks:
  postgres: null
  redis: null

secrets:
  secrets:
    file: ttt/secrets.yaml
