name: ttt

services:
  ttt:
    image: ttt:dev
    build:
      context: ../../
      dockerfile: deploy/dev/ttt/Dockerfile
      tags:
        - "ttt:dev"
    container_name: ttt
    volumes:
      - ../..:/app
      - backend-data:/run/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
      nats_streams:
        condition: service_completed_successfully
    environment:
      TTT_POSTGRES_URL: postgresql+psycopg://root:root@postgres/root
      TTT_POSTGRES_POOL_SIZE: 8
      TTT_POSTGRES_POOL_TIMEOUT_SECONDS: 30
      TTT_POSTGRES_POOL_RECYCLE_SECONDS: 1800
      TTT_POSTGRES_POOL_PRE_PING: false
      TTT_POSTGRES_ECHO: false

      TTT_REDIS_URL: redis://redis:6379/0
      TTT_REDIS_POOL_SIZE: 16

      TTT_NATS_URL: nats://nats:4222

      TTT_GEMINI_URL: https://my-openai-gemini-sigma-sandy.vercel.app

      TTT_GAME_WAITING_QUEUE_PULLING_TIMEOUT_MIN_MS: 100
      TTT_GAME_WAITING_QUEUE_PULLING_TIMEOUT_SALT_MS: 100
    secrets:
      - secrets
    command: ttt-dev

  postgres:
    image: postgres:16.3-alpine3.19
    container_name: ttt-postgres
    labels:
      deployment: dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: root
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    healthcheck:
      test: pg_isready -d root -U root
      start_period: 2m
      start_interval: 1s
      interval: 5s

  redis:
    image: redis:8.0.2-bookworm
    container_name: ttt-redis
    volumes:
      - redis-data:/data
      - ./redis:/mnt/dev
    command: redis-server /mnt/dev/redis.conf
    healthcheck:
      test: echo PING | redis-cli | grep -qF PONG
      start_period: 2m
      start_interval: 0.5s
      interval: 3s

  nats:
    image: nats:2.11.5-alpine3.22
    container_name: ttt-nats
    volumes:
      - nats-data:/data
    ports:
      - 4222:4222
    command: nats-server -js -m 8222
    healthcheck:
      test: wget http://nats:8222/healthz -q -O /dev/null
      start_period: 2m
      start_interval: 0.5s
      interval: 3s

  nats_streams:
    image: bitnami/natscli:0.2.3-debian-12-r4
    container_name: ttt-nats-streams
    depends_on:
      nats:
        condition: service_healthy
    volumes:
      - ./nats:/mnt
    entrypoint: [""]
    command: ["bash", "/mnt/add_streams.sh"]

volumes:
  backend-data:
    name: "ttt-dev-postgres-backend-data"
  postgres-data:
    name: "ttt-dev-postgres-postgres-data"
  redis-data:
    name: "ttt-dev-postgres-redis-data"
  nats-data:
    name: "ttt-dev-postgres-nats-data"

secrets:
  secrets:
    file: ttt/secrets.yaml
