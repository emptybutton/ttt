name: ttt

services:
  ttt:
    build:
      context: ../../
      dockerfile: deploy/dev/ttt/Dockerfile
      tags:
        - "ttt:dev"
    container_name: ttt
    volumes:
      - ../..:/app
      - backend-data:/run/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      TTT_POSTGRES_URL: postgresql+psycopg://root:root@postgres/root
      TTT_POSTGRES_ECHO: true
      TTT_REDIS_URL: redis://redis:6379/0
      TTT_REDIS_POOL_SIZE: 16
      TTT_GAME_WAITING_QUEUE_PULLING_TIMEOUT_MIN_MS: 100
      TTT_GAME_WAITING_QUEUE_PULLING_TIMEOUT_SALT_MS: 100
      TTT_MESSAGE_SENDING_RETRIES: 3
    secrets:
      - secrets
    command: ttt-dev

  postgres:
    image: postgres:16.3-alpine3.19
    container_name: ttt-postgres
    labels:
      deployment: dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: root
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    healthcheck:
      test: pg_isready -d root -U root
      start_period: 1m
      start_interval: 1s
      interval: 5s

  redis:
    image: redis:8.0.2-bookworm
    container_name: ttt-redis
    volumes:
      - redis-data:/data
      - ./redis:/mnt
    healthcheck:
      test: bash /mnt/is-server-ok.sh
      start_period: 2m
      start_interval: 0.5s
      interval: 3s
    command: bash /mnt/start-server.sh

volumes:
  backend-data: null
  postgres-data: null
  redis-data: null

secrets:
  secrets:
    file: ttt/secrets.yaml
